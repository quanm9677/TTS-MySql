-- ============================
-- üèóÔ∏è T·∫†O B·∫¢NG
-- ============================

CREATE TABLE Candidates (
    candidate_id INT PRIMARY KEY,
    full_name VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(20),
    years_exp INT,
    expected_salary INT
);

CREATE TABLE Jobs (
    job_id INT PRIMARY KEY,
    title VARCHAR(100),
    department VARCHAR(50),
    min_salary INT,
    max_salary INT
);

CREATE TABLE Applications (
    app_id INT PRIMARY KEY,
    candidate_id INT,
    job_id INT,
    apply_date DATE,
    status VARCHAR(20),
    FOREIGN KEY (candidate_id) REFERENCES Candidates(candidate_id),
    FOREIGN KEY (job_id) REFERENCES Jobs(job_id)
);

CREATE TABLE ShortlistedCandidates (
    candidate_id INT,
    job_id INT,
    selection_date DATE
);

-- ============================
-- üì• D·ªÆ LI·ªÜU M·∫™U
-- ============================

INSERT INTO Candidates VALUES 
(1, 'Nguyen Van A', 'a@gmail.com', '0911111111', 0, 500),
(2, 'Tran Thi B', 'b@gmail.com', NULL, 2, 800),
(3, 'Le Van C', 'c@gmail.com', '0922222222', 4, 1200),
(4, 'Pham Thi D', 'd@gmail.com', '0933333333', 7, 1500);

INSERT INTO Jobs VALUES 
(101, 'Backend Developer', 'IT', 1000, 2000),
(102, 'HR Specialist', 'HR', 800, 1200),
(103, 'Data Analyst', 'IT', 900, 1600),
(104, 'Accountant', 'Finance', 700, 1000),
(105, 'System Admin', 'IT', 1200, 1800);

INSERT INTO Applications VALUES 
(1001, 1, 101, '2024-01-10', 'Pending'),
(1002, 2, 102, '2024-01-11', 'Accepted'),
(1003, 3, 103, '2024-01-12', 'Rejected'),
(1004, 4, 101, '2024-01-13', 'Accepted'),
(1005, 3, 105, '2024-01-14', 'Accepted');

-- ============================
-- 1Ô∏è‚É£ EXISTS ‚Äì ·ª®ng vi√™n ·ª©ng tuy·ªÉn v√†o c√¥ng vi·ªác IT
-- ============================

-- L·∫•y t·∫•t c·∫£ ·ª©ng vi√™n ƒë√£ t·ª´ng n·ªôp h·ªì s∆° v√†o c√¥ng vi·ªác thu·ªôc ph√≤ng IT
-- D√πng EXISTS ƒë·ªÉ ki·ªÉm tra s·ª± t·ªìn t·∫°i h·ªì s∆° ph√π h·ª£p trong b·∫£ng Applications v√† Jobs

SELECT *
FROM Candidates c
WHERE EXISTS (
    SELECT 1
    FROM Applications a
    JOIN Jobs j ON a.job_id = j.job_id
    WHERE a.candidate_id = c.candidate_id AND j.department = 'IT'
);

-- ============================
-- 2Ô∏è‚É£ ANY ‚Äì C√¥ng vi·ªác c√≥ l∆∞∆°ng t·ªëi ƒëa l·ªõn h∆°n l∆∞∆°ng mong ƒë·ª£i c·ªßa √≠t nh·∫•t m·ªôt ·ª©ng vi√™n
-- ============================

SELECT *
FROM Jobs
WHERE max_salary > ANY (
    SELECT expected_salary FROM Candidates
);

-- ============================
-- 3Ô∏è‚É£ ALL ‚Äì C√¥ng vi·ªác c√≥ l∆∞∆°ng t·ªëi thi·ªÉu l·ªõn h∆°n l∆∞∆°ng mong ƒë·ª£i c·ªßa t·∫•t c·∫£ ·ª©ng vi√™n
-- ============================

SELECT *
FROM Jobs
WHERE min_salary > ALL (
    SELECT expected_salary FROM Candidates
);

-- ============================
-- 4Ô∏è‚É£ INSERT SELECT ‚Äì Ch√®n v√†o ShortlistedCandidates t·ª´ c√°c ·ª©ng vi√™n ƒë∆∞·ª£c ch·∫•p nh·∫≠n
-- ============================

-- L·∫•y c√°c ·ª©ng vi√™n c√≥ status = 'Accepted' v√† ch√®n v√†o b·∫£ng Shortlisted
-- selection_date s·∫Ω l·∫•y ng√†y hi·ªán t·∫°i b·∫±ng CURRENT_DATE()

INSERT INTO ShortlistedCandidates (candidate_id, job_id, selection_date)
SELECT candidate_id, job_id, CURRENT_DATE()
FROM Applications
WHERE status = 'Accepted';

-- ============================
-- 5Ô∏è‚É£ CASE ‚Äì Hi·ªÉn th·ªã m·ª©c ƒë·ªô kinh nghi·ªám theo s·ªë nƒÉm
-- ============================

-- Ph√¢n lo·∫°i kinh nghi·ªám th√†nh Fresher, Junior, Mid-level, Senior b·∫±ng CASE

SELECT 
    full_name,
    years_exp,
    CASE 
        WHEN years_exp < 1 THEN 'Fresher'
        WHEN years_exp BETWEEN 1 AND 3 THEN 'Junior'
        WHEN years_exp BETWEEN 4 AND 6 THEN 'Mid-level'
        ELSE 'Senior'
    END AS experience_level
FROM Candidates;

-- ============================
-- 6Ô∏è‚É£ COALESCE ‚Äì Thay th·∫ø gi√° tr·ªã NULL c·ªßa s·ªë ƒëi·ªán tho·∫°i
-- ============================

-- N·∫øu phone b·ªã NULL th√¨ hi·ªÉn th·ªã 'Ch∆∞a cung c·∫•p'

SELECT 
    full_name,
    COALESCE(phone, 'Ch∆∞a cung c·∫•p') AS phone
FROM Candidates;

-- ============================
-- 7Ô∏è‚É£ ƒêi·ªÅu ki·ªán k·∫øt h·ª£p ‚Äì T√¨m c√¥ng vi·ªác c√≥ max_salary ‚â† min_salary v√† ‚â• 1000
-- ============================

SELECT *
FROM Jobs
WHERE max_salary != min_salary AND max_salary >= 1000;

